{"name":"Kleio","tagline":"An API for the University or Puerto Rico, Mayagüez Campus Museum of Art","body":"# Kleio API\r\n\r\nAn API for the Museum of Art, at the University of Puerto Rico, Mayagüez Campus\r\n\r\n### Overview\r\n\r\n* [Current Version](#version)\r\n* [Schema](#schema)\r\n* [Parameters](#parameters)\r\n* [Payload](#payload)\r\n* [Errors](#errors)\r\n* [Authentication](#tests)\r\n* [Museum](#museum)\r\n* [Exhibitions](#exhibitions)\r\n* [Artifacts](#artifacts) \r\n* [Media Content](#media)\r\n\t* [Audible](#audible)\r\n\t* [Video](#video)\r\n\t* [Image](#image)\r\n\t* [Archive](#archive)\r\n* [Events](#events)\r\n* [News](#news)\r\n* [Feedback](#feedback)\r\n* [Match Hunt](#match)\r\n* [User](#user)\r\n* [iBeacons](#beacon)\r\n* [Administrator](#administrator)\r\n* [Artist](#artist)\r\n* [Room](#room)\r\n\r\n\r\n \r\n\r\n### Current Version <a id=\"version\"></a>\r\n\r\nThe purpose of this API is fascilitating information to the Kleio mobile applications. The Museum of the University of Puerto Rico, Mayagüez Campus (Kleio) will allow students to browse all the collections of the museum from the comfort of their smartphone. A few extras are provided for users that make use of the application while inside of the Museum. This API is currently in it's ***Beta*** version, bugs or complains are more than welcomed.\r\n\r\n\r\n### Schema <a id=\"schema\"></a>\r\n\r\nAs of the current version, the base URL for this API is `http://136.145.116.229:4567/`, this base API is subject to change do to early development. All communication to and from the API will be managed using *JSON* documents.\r\n\r\n### Parameters <a id=\"parameters\"></a>\r\n\r\nSupport for query parameters exists on a per-route basis, this is described further below under each API Entity. The parameters supported by this API as of this version are:\r\n\r\nParameter | Description\r\n----|------ |-----\r\npage | For pagination purposes, select the page number, defaults to 0.\r\nper_page | For pagination purposes, select the amount of items per page, defaults to 25\r\nbeacon_code | An iBeacon code\r\ntitle | Represent's the title attribute of a resource\r\nexhibition_id |An integer representing an Exhibition id\r\nartist | Represent's the name attribute of an Artist resource\r\nemail | Represent's the email attribute of a resource\r\nfirst_name | Represent's the first_name attribute of a resource\r\nseen | Represent's the seen attribute of a resource\r\ntype | Represents the type attribute of a resource\r\nresolved | Represents the resolved attribute of a resource\r\nname | Represents the name attribute of a resource\r\n\r\n\r\n### Payload <a id=\"payload\"></a>\r\n\r\nAs previously mentioned, all requests comunication is expected to happen by means of JSON. In the case of edit requests, the payload attributes can be the same as the create requests. Only the provided attributes will be updated in edit requests\r\n\r\n### Errors <a id=\"errors\"></a>\r\n\r\nWhen an error is encountered, the API will respond with an appropiate status code and a message in the Body explaining the error. Possible errors are as follows:\r\n\r\nError | Description | Status Code\r\n----|------ |-----\r\nNot Found | The resource resource was not found | 404\r\nProtected Resource | The resource that is trying to be accessed is protected, use proper Authorization header | 401\r\nInvalid Payload | Problems with the current payload. Payload may be unabelable or some attributes may be missing | 400\r\nUnauthorized | The request source does not have access to this route | 403\r\nInvalid Parameters | The provided uri paramters are not acceptable | 400\r\nInternal Server Error | Oh noes, something went horribly wrong, case by case basis | 500\r\n\r\n### Authentication <a id=\"authentication\"></a>\r\n\r\nSome routes will respond with a 401: Protected Resource error. This means that authentication is needed in order to access this information. The authentication process is as follows:\r\n\r\n1. `POST /authenticate` with valid parameters\r\n2. Upon successful authentification, the server will respond with a Token, store this token for further requests\r\n\r\nEach request to a protected route will need to contain the Authorization header, providing the token.\r\n\r\n\r\n<!-- ### Models <a id=\"models\"></a>\r\n\r\nInformation on the model schema for this project is provided [here]() -->\r\n\r\n### Museum <a id=\"museum\"></a>\r\n\r\nHandle all information regarding the Museum Model\r\n\r\n**Get the most recent Museum instance**\r\n\r\n```\r\nGET /museum\r\n```\r\n\r\n*Response*\r\n\r\n```\r\n{\r\n  \"name\": \"Museo de Arte De La Universidad de Puerto Rico en Mayagüez\",\r\n  \"description\": \"El Colegio de Mayagüez se enorgulleze en presentar el Museo de Arte de la universidad de Puerto Rico\",\r\n  \"hoursOfOperation\": \"Lunes a Viernes de 8:00AM a 10:00PM\",\r\n  \"email\": \"musa@upr.edu\",\r\n  \"phone\": \"787878787\",\r\n  \"image\": \"http://randomimage.jpg\",\r\n  \"location\": \"arandomlocation.com\",\r\n  \"terms\": \"No bregues mal\",\r\n  \"about\": \"Establecido en Junio 2015\"\r\n}\r\n```\r\n\r\n**Update Museum**\r\n\r\n```\r\nPUT /museum\r\n```\r\n\r\nThe museum model is unusual since only one instance is expected to ever be created. Any time a Museum instance is modified, changes will be made to the most recent instance of Museum.\r\n\r\n\r\n### Exhibitions <a id=\"exhibitions\"></a>\r\n\r\nExhibitions are, in essence, a collection of Artifacts. These collections, however, have different attributes, which merit the creation of their own module.\r\n\r\n**Security**\r\n\r\nAdministrator authentication is required to access routes for creating, updating and deleting exhibitions, read Authentication section for mode reference.\r\n\r\n**List of Exhibitions**\r\n\r\n```\r\nGET /exhibition\r\n```\r\n*Parameters*\r\n\r\nAvailable parameters are: ***page, per_page, and title***\r\n\r\n*Response*\r\n\r\n```\r\n{\r\n  \"exhibitions\": [\r\n    {\r\n      \"id\": 2,\r\n      \"title\": \"iPhone Ultimate Exhibition\",\r\n      \"description\": \"An Exhibition about iPhones\",\r\n      \"image\": \"http://uritoarandomimage.com/4521\",\r\n      \"active\": true,\r\n      \"MuseumId\": 1,\r\n      \"createdAt\": \"2015-04-08T03:44:15.201Z\",\r\n      \"updatedAt\": \"2015-04-08T03:44:58.793Z\",\r\n      \"deletedAt\": null\r\n    },\r\n    {\r\n      \"id\": 1,\r\n      \"title\": \"Vader\",\r\n      \"description\": \"An exhibition showing Cesarangelos best Vader portraits\",\r\n      \"image\": \"http://uritoarandomimage.com/4523\",\r\n      \"active\": true,\r\n      \"MuseumId\": 1,\r\n      \"createdAt\": \"2015-03-31T18:58:08.046Z\",\r\n      \"updatedAt\": \"2015-03-31T18:58:08.046Z\",\r\n      \"deletedAt\": null\r\n    }\r\n  ]\r\n}\r\n```\r\n**Single Exhibition**\r\n\r\n```\r\nGET /exhibition/:id\r\n```\r\nA single Exhibition instance is returned, including Artifacts which belong to this exhibtion, if any.\r\n\r\n*Response*\r\n\r\n```\r\n{\r\n  \"id\": 2,\r\n  \"title\": \"iPhone Ultimate Exhibition\",\r\n  \"description\": \"An Exhibition about iPhones\",\r\n  \"image\": \"http://uritoarandomimage.com/4521\",\r\n  \"active\": true,\r\n  \"MuseumId\": 1,\r\n  \"createdAt\": \"2015-04-08T03:44:15.201Z\",\r\n  \"updatedAt\": \"2015-04-08T03:44:58.793Z\",\r\n  \"deletedAt\": null,\r\n  \"Artifacts\": [\r\n    {\r\n      \"id\": 2,\r\n      \"title\": \"Hope Vader\",\r\n      \"description\": \"Darth Vader posing as the famous 2008 Obama hope poster\",\r\n      \"medium\": \"Oil base\",\r\n      \"classification\": \"Modern\",\r\n      \"attribution\": null,\r\n      \"type\": \"Painting\",\r\n      \"dimensions\": \"8x11.5\",\r\n      \"dated\": \"2013\",\r\n      \"period\": \"Modern\",\r\n      \"culture\": \"Puertorican\",\r\n      \"department\": null,\r\n      \"objectNumber\": \"0927450934875097345-984530980954303980245\",\r\n      \"image\": \"https://arandomimage.com\",\r\n      \"ArtistId\": 1,\r\n      \"qrcode\": \"https://arandomqrcode.com\",\r\n      \"ExhibitionId\": 2,\r\n      \"createdAt\": \"2015-03-31T19:02:43.088Z\",\r\n      \"updatedAt\": \"2015-04-17T04:16:16.151Z\",\r\n      \"deletedAt\": null\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\n**Get Exhibition near me, using iBeacon code**\r\n\r\n\r\n```\r\nGET /exhibition/near/me?beaconX=beacon_code\r\n```\r\nThe beacon code is provided by means of the beaconX request query parameter. If I were to pass a single iBeacon code, the query would be as follows:\r\n\r\n```\r\nGET /exhibition/near/me?beacon1=B558CBDA-4472-4211-A350-FF1196FFE8C8\r\n```\r\n\r\nIf I were to send two iBeacon codes:\r\n\r\n```\r\nGET /exhibitions/near/me?beacon1=B558CBDA-4472-4211-A350-FF1196FFE8C8&beacon2=BCC8CBDA-88AA-4211-A350-FF1196FFE8C8\r\n```\r\nEssentially concatinating ibeacon codes as needed.\r\n\r\n*Response*\r\n\r\n```\r\n{\r\n  \"exhibitions\": [\r\n    {\r\n      \"id\": 1,\r\n      \"title\": \"Vader\",\r\n      \"description\": \"An exhibition showing Cesarangelos best Vader portraits\",\r\n      \"image\": \"http://uritoarandomimage.com/4521\",\r\n      \"active\": true,\r\n      \"MuseumId\": 1,\r\n      \"createdAt\": \"2015-03-31T18:58:08.046Z\",\r\n      \"updatedAt\": \"2015-03-31T18:58:08.046Z\",\r\n      \"ExhibitionBeacon\": {\r\n        \"id\": 1,\r\n        \"ExhibitionId\": 1,\r\n        \"BeaconId\": 1,\r\n        \"createdAt\": \"2015-04-01T03:25:28.787Z\",\r\n        \"updatedAt\": \"2015-04-01T03:25:28.787Z\"\r\n      }\r\n    }\r\n  ]\r\n}\r\n```\r\n**Create an Exhibition**\r\n\r\n```\r\nPOST /exhibition\r\n```\r\n\r\n*Payload*\r\n\r\nRequired: title, MuseumId\r\nOptional: description, image, active\r\n\r\n\r\n*Response*\r\n\r\nStatus code of 201 if creation was successful.\r\n\r\n**Edit an Exhibition**\r\n\r\n```\r\nPUT /exhibition/:id\r\n```\r\n\r\n*Response*\r\n\r\nStatus code of 200 if update was successful.\r\n\r\n**Delete an Exhibition**\r\n\r\n```\r\nDELETE /exhibition/:id\r\n```\r\n*Response*\r\n\r\nA status code of 200 if delete was successful.\r\n\r\n### Exhibitions and iBeacons\r\n\r\n**Show beacons for all Exhibitions**\r\n\r\n```\r\nGET /exhibition/beacon\r\n```\r\n\r\n*Response*\r\n\r\n```\r\n{\r\n    \"exhibitionBeacons\": [\r\n        {\r\n            \"id\": 1,\r\n            \"ExhibitionId\": 1,\r\n            \"BeaconId\": 1,\r\n            \"createdAt\": \"2015-04-01T03:25:28.787Z\",\r\n            \"updatedAt\": \"2015-04-01T03:25:28.787Z\"\r\n        },\r\n        {\r\n            \"id\": 3,\r\n            \"ExhibitionId\": 1,\r\n            \"BeaconId\": 1,\r\n            \"createdAt\": \"2015-04-17T03:47:12.854Z\",\r\n            \"updatedAt\": \"2015-04-17T03:47:33.338Z\"\r\n        }\r\n    ]\r\n}\r\n```\r\n\r\n**Get single association iBeacons - Exhibition**\r\n\r\n```\r\nGET /exhibition/beacon/:id\r\n```\r\n\r\n*Response*\r\n\r\n```\r\n{\r\n    \"id\": 1,\r\n    \"ExhibitionId\": 1,\r\n    \"BeaconId\": 1,\r\n    \"createdAt\": \"2015-04-01T03:25:28.787Z\",\r\n    \"updatedAt\": \"2015-04-01T03:25:28.787Z\"\r\n}\r\n```\r\n\r\n**Edit Exhibition iBeacons**\r\n\r\n```\r\nPUT /exhibition/beacon/:id\r\n```\r\n\r\n*Response*\r\n\r\nStatus code of 200 if update was successful.\r\n\r\n**Delete Exhibition iBeacon**\r\n\r\nThis route de-associates Exhibitions and iBeacons\r\n\r\n```\r\nDELETE /exhibition/beacon/:id\r\n```\r\n\r\n*Response*\r\n\r\nStatus code of 200 if delete was successful.\r\n\r\n### Artifacts <a id=\"artifacts\"></a>\r\n\r\nAn artifact is essentially any art piece within the Museum. \r\n\r\n**Security**\r\nAccess to create, edit or delete Artifacts is restricted to administrator users.\r\n\r\n**List Artifacts**\r\n\r\n```\r\nGET /artifact\r\n```\r\n\r\n*Parameters*\r\n\r\nAvailable parameters are: ***page, per_page, artist, title, exhibition_id\r\n\r\n*Response*\r\n\r\n```\r\n{\r\n    \"artifacts\": [\r\n        {\r\n            \"id\": 2,\r\n            \"title\": \"Hope Vader\",\r\n            \"description\": \"Darth Vader posing as the famous 2008 Obama hope poster\",\r\n            \"medium\": \"Oil base\",\r\n            \"classification\": \"Modern\",\r\n            \"attribution\": null,\r\n            \"type\": \"Painting\",\r\n            \"dimensions\": \"8x11.5\",\r\n            \"dated\": \"2013\",\r\n            \"period\": \"Modern\",\r\n            \"culture\": \"Puertorican\",\r\n            \"department\": null,\r\n            \"objectNumber\": \"0927450934875097345-984530980954303980245\",\r\n            \"image\": \"https://scontent-atl.xx.fbcdn.net/hphotos-xfa1/v/l/t1.0-9/399196_1405515439661511_227192283_n.jpg?oh=e9ecb5131e950c53bb2ae70c3e42a58e&oe=55B5F870\",\r\n            \"ArtistId\": 1,\r\n            \"qrcode\": \"https://scontent-atl.xx.fbcdn.net/hphotos-xfa1/v/l/t1.0-9/399196_1405515439661511_227192283_n.jpg?oh=e9ecb5131e950c53bb2ae70c3e42a58e&oe=55B5F870\",\r\n            \"ExhibitionId\": 2,\r\n            \"createdAt\": \"2015-03-31T19:02:43.088Z\",\r\n            \"updatedAt\": \"2015-04-17T04:16:16.151Z\",\r\n            \"deletedAt\": null\r\n        }\r\n    ]\r\n}\r\n```\r\n\r\n**Single Artifact**\r\n\r\n```\r\nGET /Artifact/:id\r\n```\r\n\r\n*Response*\r\n\r\n```\r\n{\r\n    \"id\": 2,\r\n    \"title\": \"Hope Vader\",\r\n    \"description\": \"Darth Vader posing as the famous 2008 Obama hope poster\",\r\n    \"medium\": \"Oil base\",\r\n    \"classification\": \"Modern\",\r\n    \"attribution\": null,\r\n    \"type\": \"Painting\",\r\n    \"dimensions\": \"8x11.5\",\r\n    \"dated\": \"2013\",\r\n    \"period\": \"Modern\",\r\n    \"culture\": \"Puertorican\",\r\n    \"department\": null,\r\n    \"objectNumber\": \"0927450934875097345-984530980954303980245\",\r\n    \"image\": \"https://scontent-atl.xx.fbcdn.net/hphotos-xfa1/v/l/t1.0-9/399196_1405515439661511_227192283_n.jpg?oh=e9ecb5131e950c53bb2ae70c3e42a58e&oe=55B5F870\",\r\n    \"ArtistId\": 1,\r\n    \"qrcode\": \"\",\r\n    \"ExhibitionId\": 2,\r\n    \"createdAt\": \"2015-03-31T19:02:43.088Z\",\r\n    \"updatedAt\": \"2015-04-17T04:16:16.151Z\",\r\n    \"deletedAt\": null,\r\n    \"Videos\": [\r\n        {\r\n            \"id\": 1,\r\n            \"title\": \"Volkswagon Vader Commercial\",\r\n            \"description\": \"Vader Commercial\",\r\n            \"link\": \"https://www.youtube.com/watch?v=R55e-uHQna0\",\r\n            \"createdAt\": \"2015-03-31T18:58:08.051Z\",\r\n            \"updatedAt\": \"2015-03-31T18:58:08.051Z\",\r\n            \"ArtifactVideo\": {\r\n                \"id\": 2,\r\n                \"ArtifactId\": 2,\r\n                \"VideoId\": 1,\r\n                \"createdAt\": \"2015-03-31T21:24:44.010Z\",\r\n                \"updatedAt\": \"2015-03-31T21:24:44.010Z\"\r\n            }\r\n        }\r\n    ],\r\n    \"Audibles\": [\r\n        {\r\n            \"id\": 1,\r\n            \"title\": \"Emperial March\",\r\n            \"description\": \"When you hear this, you know the emperor is comming\",\r\n            \"link\": \"https://soundcloud.com/roy-vader/the-imperial-march-darth\",\r\n            \"createdAt\": \"2015-03-31T18:58:08.042Z\",\r\n            \"updatedAt\": \"2015-03-31T18:58:08.042Z\",\r\n            \"ArtifactAudible\": {\r\n                \"id\": 2,\r\n                \"ArtifactId\": 2,\r\n                \"AudibleId\": 1,\r\n                \"createdAt\": \"2015-03-31T21:24:43.998Z\",\r\n                \"updatedAt\": \"2015-03-31T21:24:43.998Z\"\r\n            }\r\n        },\r\n        {\r\n            \"id\": 7,\r\n            \"title\": \"Started From The Bottom\",\r\n            \"description\": \"This is the REAL Hustler Anthem\",\r\n            \"link\": \"https://soundcloud.com/octobersveryown/drake-started-from-the-bottom\",\r\n            \"createdAt\": \"2015-04-08T02:11:21.709Z\",\r\n            \"updatedAt\": \"2015-04-08T02:39:41.967Z\",\r\n            \"ArtifactAudible\": {\r\n                \"id\": 8,\r\n                \"ArtifactId\": 2,\r\n                \"AudibleId\": 7,\r\n                \"createdAt\": \"2015-04-08T02:11:21.739Z\",\r\n                \"updatedAt\": \"2015-04-08T02:11:21.739Z\"\r\n            }\r\n        }\r\n    ],\r\n    \"Images\": [\r\n        {\r\n            \"id\": 1,\r\n            \"title\": \"Who is Vader?\",\r\n            \"description\": \"A picture depicting who is this vader whos existance we are celebrating\",\r\n            \"link\": \"http://somethiing.com/wp-content/uploads/2013/darth-vader.jpg\",\r\n            \"createdAt\": \"2015-03-31T18:58:08.047Z\",\r\n            \"updatedAt\": \"2015-03-31T18:58:08.047Z\",\r\n            \"ArtifactImage\": {\r\n                \"id\": 1,\r\n                \"ArtifactId\": 2,\r\n                \"ImageId\": 1,\r\n                \"createdAt\": \"2015-03-31T21:22:54.704Z\",\r\n                \"updatedAt\": \"2015-03-31T21:22:54.704Z\"\r\n            }\r\n        }\r\n    ],\r\n    \"Texts\": [\r\n        {\r\n            \"id\": 1,\r\n            \"title\": \"Memoirs of Vader\",\r\n            \"description\": \"A journey into the life and death of Darth Vader\",\r\n            \"link\": \"http://www.something.com/something/darkside\",\r\n            \"createdAt\": \"2015-03-31T18:58:08.050Z\",\r\n            \"updatedAt\": \"2015-03-31T18:58:08.050Z\",\r\n            \"ArtifactText\": {\r\n                \"id\": 2,\r\n                \"ArtifactId\": 2,\r\n                \"TextId\": 1,\r\n                \"createdAt\": \"2015-03-31T21:24:44.015Z\",\r\n                \"updatedAt\": \"2015-03-31T21:24:44.015Z\"\r\n            }\r\n        }\r\n    ],\r\n    \"Artist\": {\r\n        \"id\": 1,\r\n        \"name\": \"César\",\r\n        \"biography\": \"Nacido en Tatooine\",\r\n        \"birthDay\": \"1880\",\r\n        \"createdAt\": \"2015-03-31T18:58:08.025Z\",\r\n        \"updatedAt\": \"2015-03-31T18:58:08.025Z\"\r\n    }\r\n}\r\n```\r\n\r\n**Create an Artifact**\r\n\r\nCreate an instance of Artifact, requires authentification\r\n\r\n```\r\nPOST /artifact\r\n```\r\n\r\n*Payload*\r\n\r\nRequired: title, image\r\nOptional: description, medium, classification, attribution, type, dated, period, culture, department, objectNumber, ArtistId, qrcode, ExhibitionId\r\n\r\n*Response*\r\n\r\nStatus code 201 if created successfully.\r\n\r\n**Edit Artifact**\r\n\r\n```\r\nPUT /artifact/:id\r\n```\r\n\r\n*Response*\r\n\r\nStatus code of 200 if successful.\r\n\r\n**Delete an Artifact**\r\n\r\n```\r\nDELETE /administrator/:id\r\n```\r\n\r\n*Response*\r\n\r\nStatus code of 200 if successful.\r\n\r\n### Media Content <a id=\"media\"></a>\r\n\r\nMedia Content are pieces of information in the form of *images, audibles, videos or archives* that are related by an Administrator (based on their criteria) to an Artifact and as so, are presented alongside the artifact. As was previously mentioned, the media content is delieved once a single artifact is retrieved. \r\n\r\n### Audible <a id=\"audible\"></a>\r\n\r\nThis refers to contant that is distributed by means of audio files. For now, this content can only be delived by means of a URL that locates the actual content.\r\n\r\n**List all Audibles for a given Artifact**\r\n\r\n```\r\nGET /artifact/audible/:id\r\n```\r\nIn this case, the *id* parameter refers to the id parameter of an *artifact*\r\n\r\n*Response*\r\n\r\n```\r\n{\r\n  \"audibles\": [\r\n    {\r\n      \"id\": 1,\r\n      \"title\": \"Emperial March\",\r\n      \"description\": \"When you hear this, you know the emperor is comming\",\r\n      \"link\": \"https://soundcloud.com/roy-vader/the-imperial-march-darth\",\r\n      \"createdAt\": \"2015-03-31T18:58:08.042Z\",\r\n      \"updatedAt\": \"2015-03-31T18:58:08.042Z\"\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\n**Single Audible**\r\n\r\n```\r\nGET /audible/:id\r\n```\r\n*Response*\r\n\r\n```\r\n{\r\n  \"id\": 1,\r\n  \"title\": \"Emperial March\",\r\n  \"description\": \"When you hear this, you know the emperor is comming\",\r\n  \"link\": \"https://soundcloud.com/roy-vader/the-imperial-march-darth\",\r\n  \"createdAt\": \"2015-03-31T18:58:08.042Z\",\r\n  \"updatedAt\": \"2015-03-31T18:58:08.042Z\"\r\n}\r\n```\r\n\r\n**Create Audible**\r\n\r\n```\r\nPOST /audible\r\n```\r\n\r\n*Payload*\r\n\r\nRequired: title, link\r\nOptional: description\r\n\r\n*Response*\r\n\r\nStatus code 201 if Audible was created successfully.\r\n\r\n**Edit Audible**\r\n\r\n```\r\nPUT /audible/:id\r\n```\r\n\r\n*Response*\r\n\r\nStatus code of 200 if update was successful.\r\n\r\n**Delete Audible**\r\n\r\n```\r\nDELETE /audible/:id\r\n```\r\n\r\n*Response*\r\n\r\nStatus code 200 if delete was successful.\r\n\r\n### Video <a id=\"video\"></a>\r\n\r\nVideo content in the form of a URL that points to a video resource.\r\n\r\n**List all Videos for a given Artifact**\r\n\r\n```\r\nGET /artifact/video/:id\r\n```\r\nIn this case, the *id* parameter refers to the id parameter of an *artifact*\r\n\r\n*Response*\r\n\r\n```\r\n{\r\n    \"videos\": [\r\n        {\r\n            \"id\": 1,\r\n            \"title\": \"Volkswagon Vader Commercial\",\r\n            \"description\": \"Vader Commercial\",\r\n            \"link\": \"https://www.youtube.com/watch?v=R55e-uHQna0\",\r\n            \"createdAt\": \"2015-03-31T18:58:08.051Z\",\r\n            \"updatedAt\": \"2015-03-31T18:58:08.051Z\"\r\n        }\r\n    ]\r\n}\r\n```\r\n\r\n**Single Video**\r\n\r\n```\r\nGET /video/:id\r\n```\r\n*Response*\r\n\r\n```\r\n{\r\n    \"id\": 1,\r\n    \"title\": \"Volkswagon Vader Commercial\",\r\n    \"description\": \"Vader Commercial\",\r\n    \"link\": \"https://www.youtube.com/watch?v=R55e-uHQna0\",\r\n    \"createdAt\": \"2015-03-31T18:58:08.051Z\",\r\n    \"updatedAt\": \"2015-03-31T18:58:08.051Z\"\r\n}\r\n```\r\n\r\n**Create Video**\r\n\r\n```\r\nPOST /video\r\n```\r\n\r\n*Payload*\r\n\r\nRequired: title, link\r\nOptional: description\r\n\r\n*Response*\r\n\r\nStatus code 201 if Video was created successfully.\r\n\r\n**Edit Video**\r\n\r\n```\r\nPUT /video/:id\r\n```\r\n\r\n*Response*\r\n\r\nStatus code of 200 if update was successful.\r\n\r\n**Delete Video**\r\n\r\n```\r\nDELETE /video/:id\r\n```\r\n\r\n*Response*\r\n\r\nStatus code 200 if delete was successful.\r\n\r\n\r\n### Image <a id=\"image\"></a>\r\n\r\nImage content in the form of a URL that points to a image resource.\r\n\r\n**List all Images for a given Artifact**\r\n\r\n```\r\nGET /artifact/image/:id\r\n```\r\nIn this case, the *id* parameter refers to the id parameter of an *artifact*\r\n\r\n*Response*\r\n\r\n```\r\n{\r\n    \"images\": [\r\n        {\r\n            \"id\": 1,\r\n            \"title\": \"Who is Vader?\",\r\n            \"description\": \"A picture depicting who is this vader whos existance we are celebrating\",\r\n            \"link\": \"http://wersm.com/wp-content/uploads/2013/12/3474964-darth-vader.jpg\",\r\n            \"createdAt\": \"2015-03-31T18:58:08.047Z\",\r\n            \"updatedAt\": \"2015-03-31T18:58:08.047Z\"\r\n        }\r\n    ]\r\n}\r\n```\r\n\r\n**Single Image**\r\n\r\n```\r\nGET /image/:id\r\n```\r\n*Response*\r\n\r\n```\r\n{\r\n    \"id\": 1,\r\n    \"title\": \"Who is Vader?\",\r\n    \"description\": \"A picture depicting who is this vader whos existance we are celebrating\",\r\n    \"link\": \"http://wersm.com/wp-content/uploads/2013/12/3474964-darth-vader.jpg\",\r\n    \"createdAt\": \"2015-03-31T18:58:08.047Z\",\r\n    \"updatedAt\": \"2015-03-31T18:58:08.047Z\"\r\n}\r\n```\r\n\r\n**Create Image**\r\n\r\n```\r\nPOST /image\r\n```\r\n\r\n*Payload*\r\n\r\nRequired: title, link\r\nOptional: description\r\n\r\n*Response*\r\n\r\nStatus code 201 if Image was created successfully.\r\n\r\n**Edit Image**\r\n\r\n```\r\nPUT /image/:id\r\n```\r\n\r\n*Response*\r\n\r\nStatus code of 200 if update was successful.\r\n\r\n**Delete Image**\r\n\r\n```\r\nDELETE /image/:id\r\n```\r\n\r\n*Response*\r\n\r\nStatus code 200 if delete was successful.\r\n\r\n### Archive <a id=\"archive\"></a>\r\n\r\n**List all Archives for a given Artifact**\r\n\r\n```\r\nGET /artifact/archive/:id\r\n```\r\nIn this case, the *id* parameter refers to the id parameter of an *artifact*\r\n\r\n*Response*\r\n\r\n```\r\n{\r\n    \"archives\": [\r\n        {\r\n            \"id\": 1,\r\n            \"title\": \"Memoirs of Vader\",\r\n            \"description\": \"A journey into the life and death of Darth Vader\",\r\n            \"link\": \"http://www.starwars.com/databank/darth-vader\",\r\n            \"createdAt\": \"2015-03-31T18:58:08.050Z\",\r\n            \"updatedAt\": \"2015-03-31T18:58:08.050Z\"\r\n        }\r\n    ]\r\n}\r\n```\r\n\r\n**Single Archive**\r\n\r\n```\r\nGET /archive/:id\r\n```\r\n*Response*\r\n\r\n```\r\n{\r\n    \"id\": 1,\r\n    \"title\": \"Memoirs of Vader\",\r\n    \"description\": \"A journey into the life and death of Darth Vader\",\r\n    \"link\": \"http://www.starwars.com/databank/darth-vader\",\r\n    \"createdAt\": \"2015-03-31T18:58:08.050Z\",\r\n    \"updatedAt\": \"2015-03-31T18:58:08.050Z\"\r\n}\r\n```\r\n\r\n**Create Archive**\r\n\r\n```\r\nPOST /archive\r\n```\r\n\r\n*Payload*\r\n\r\nRequired: title, link\r\nOptional: description\r\n\r\n*Response*\r\n\r\nStatus code 201 if Archive was created successfully.\r\n\r\n**Edit Archive**\r\n\r\n```\r\nPUT /archive/:id\r\n```\r\n\r\n*Response*\r\n\r\nStatus code of 200 if update was successful.\r\n\r\n**Delete Archive**\r\n\r\n```\r\nDELETE /archive/:id\r\n```\r\n\r\n*Response*\r\n\r\nStatus code 200 if delete was successful.\r\n\r\n### Events <a id=\"events\"></a>\r\n\r\nEvents represent actuall events that are handled by the MuSA museum.\r\n\r\n**Security**\r\n\r\nEvents can only be created, edited or deleted by an Administrator user, requires authorization.\r\n\r\n**List Events**\r\n\r\n```\r\nGET /events\r\n```\r\n\r\n*Parameters*\r\n\r\nAvailable parameters are: *page, per_page, title*\r\n\r\n*Response*\r\n\r\n```\r\n{\r\n  \"events\": [\r\n    {\r\n      \"id\": 2,\r\n      \"title\": \"Vader Exhibition\",\r\n      \"description\": \"An exhibition showing Cesarangelos best Vader portraits\",\r\n      \"eventDate\": \"2015-05-02T07:24:00.000Z\",\r\n      \"image\": \"http://somerandomeimage.com/vader.jpeg\",\r\n      \"location\": \"http://arandomlocation.com\",\r\n      \"author\": 1,\r\n      \"createdAt\": \"2015-03-31T19:02:43.100Z\",\r\n      \"updatedAt\": \"2015-03-31T19:02:43.100Z\"\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\n**Single Event**\r\n\r\n```\r\nGET /events/:id\r\n```\r\n\r\n*Response*\r\n\r\n\r\n\r\n**Request**\r\n\r\n```\r\nGET /events/:id\r\n```\r\n\r\n*Response*\r\n\r\n```\r\n{\r\n  \"id\": 2,\r\n  \"title\": \"Vader Exhibition\",\r\n  \"description\": \"An exhibition showing Cesarangelos best Vader portraits\",\r\n  \"eventDate\": \"2015-05-02T07:24:00.000Z\",\r\n  \"image\": \"http://adsoftheworld.com/sites/default/files/styles/media_retina/public/images/sta-002_portfolio_darthv_ang_lr_1.jpg?itok=98Knqo57\",\r\n  \"location\": \"http://adsoftheworld.com/sites/default/files/styles/media_retina/public/images/sta-002_portfolio_darthv_ang_lr_1.jpg?itok=98Knqo57\",\r\n  \"author\": 1,\r\n  \"createdAt\": \"2015-03-31T19:02:43.100Z\",\r\n  \"updatedAt\": \"2015-03-31T19:02:43.100Z\"\r\n}\r\n```\r\n\r\n**Create an Event**\r\n\r\n```\r\nPOST /events\r\n```\r\n\r\n*Payload*\r\n\r\nRequired: title, description, eventDate\r\nOptional: image, location, author\r\n\r\n*Response*\r\n\r\nStatus code of 201 is entity created successfully.\r\n\r\n**Edit Event**\r\n\r\n```\r\nPUT /events/:id\r\n```\r\n\r\n*Response*\r\n\r\nStatus code of 200 if entity updated successfully.\r\n\r\n**Delete**\r\n\r\n```\r\nDELETE /events/:id\r\n```\r\n\r\n*Response*\r\n\r\nStatus code of 200 is delete was successful.\r\n\r\n### News <a id=\"news\"></a>\r\n\r\nNews represent articles created or related to the MuSA.\r\n\r\n**Security**\r\n\r\nNews can only be created, edited or deleted by an Administrator user, requires authorization.\r\n\r\n**List News**\r\n\r\n```\r\nGET /news\r\n```\r\n\r\n*Parameters*\r\n\r\nAvailable parameters are: *page, per_page, title*\r\n\r\n*Response*\r\n\r\n```\r\n{\r\n    \"news\": [\r\n        {\r\n            \"id\": 3,\r\n            \"title\": \"New Dahli Exhibition\",\r\n            \"description\": \"An Exhibition by renowned artist Salvador Dahli\",\r\n            \"image\": null,\r\n            \"AdministratorId\": null,\r\n            \"createdAt\": \"2015-04-18T16:15:13.282Z\",\r\n            \"updatedAt\": \"2015-04-18T16:16:42.856Z\"\r\n        },\r\n        {\r\n            \"id\": 1,\r\n            \"title\": \"MuSA Café\",\r\n            \"description\": \"Museum of Art from the University of Puerto Rico Mayagüez Campus is proud to invite you to the MuSA Café Openning\",\r\n            \"image\": \"http://media.zenfs.com/en-US/video/video.pd2upload.com/video.yahoofinance.com@0c15ac80-566c-3267-897f-982c3aaddf98_FULL.jpg\",\r\n            \"AdministratorId\": null,\r\n            \"createdAt\": \"2015-03-31T18:58:08.048Z\",\r\n            \"updatedAt\": \"2015-04-18T16:16:42.856Z\"\r\n        }\r\n    ]\r\n}\r\n```\r\n\r\n**Single News**\r\n\r\n```\r\nGET /news/:id\r\n```\r\n\r\n*Response*\r\n\r\n```\r\n{\r\n    \"id\": 1,\r\n    \"title\": \"MuSA Café\",\r\n    \"description\": \"Museum of Art from the University of Puerto Rico Mayagüez Campus is proud to invite you to the MuSA Café Openning\",\r\n    \"image\": \"http://media.zenfs.com/en-US/video/video.pd2upload.com/video.yahoofinance.com@0c15ac80-566c-3267-897f-982c3aaddf98_FULL.jpg\",\r\n    \"AdministratorId\": null,\r\n    \"createdAt\": \"2015-03-31T18:58:08.048Z\",\r\n    \"updatedAt\": \"2015-04-18T16:16:42.856Z\"\r\n}\r\n```\r\n**Create News**\r\n\r\n```\r\nPOST /news\r\n```\r\n\r\n*Payload*\r\n\r\nRequired: title, description, image\r\nOptional: AdministratorId\r\n\r\n*Response*\r\n\r\nStatus code of 201 is entity created successfully.\r\n\r\n**Edit News**\r\n\r\n```\r\nPUT /news/:id\r\n```\r\n\r\n*Response*\r\n\r\nStatus code of 200 if entity updated successfully.\r\n\r\n**Delete**\r\n\r\n```\r\nDELETE /news/:id\r\n```\r\n\r\n*Response*\r\n\r\nStatus code of 200 if delete was successful.\r\n\r\n### Feedback <a id=\"feedback\"></a>\r\n\r\nFeedback represents messages sent from users to the musuem, regarding a topic which could be either a bug, a general comment or a content problem.\r\n\r\n**Security**\r\n\r\nAny user can create feedback content, to view, edit or destroy a feedback instance, administrator priviledges are required.\r\n\r\n**List Feedback**\r\n\r\n```\r\nGET /feedback\r\n```\r\n\r\n*Parameters*\r\n\r\nAvailable query parameters are: ***page, per_page, title, seen, type, resolved***\r\n\r\n*Response*\r\n\r\n```\r\n{\r\n    \"feedbacks\": [\r\n        {\r\n            \"id\": 1,\r\n            \"title\": \"Museum App\",\r\n            \"message\": \"The museum apps are very awesome\",\r\n            \"seen\": false,\r\n            \"type\": \"general\",\r\n            \"resolved\": false,\r\n            \"MuseumId\": 1,\r\n            \"createdAt\": \"2015-03-31T01:20:20.102Z\",\r\n            \"updatedAt\": \"2015-03-31T01:20:20.102Z\"\r\n        }\r\n    ]\r\n}\r\n```\r\n\r\n**Single Feedback**\r\n\r\n```\r\nGET /feedback/:id\r\n```\r\n\r\n*Response*\r\n\r\n```\r\n{\r\n    \"feedbacks\": [\r\n        {\r\n            \"id\": 1,\r\n            \"title\": \"Museum App\",\r\n            \"message\": \"The museum apps are very awesome\",\r\n            \"seen\": false,\r\n            \"type\": \"general\",\r\n            \"resolved\": false,\r\n            \"MuseumId\": 1,\r\n            \"createdAt\": \"2015-03-31T01:20:20.102Z\",\r\n            \"updatedAt\": \"2015-03-31T01:20:20.102Z\"\r\n        }\r\n    ]\r\n}\r\n```\r\n\r\n**Creating feedback**\r\n\r\n```\r\nPOST /feedback\r\n```\r\n\r\n*Payload*\r\n\r\nRequired: title, message, type, MuseumId\r\nOptional: resolved, seen\r\n\r\n*Response*\r\n\r\nStatus code of 201 if Feedback created successfully.\r\n\r\n**Edit Feedback**\r\n\r\n```\r\nPUT /feedback/:id\r\n```\r\n\r\n*Response*\r\n\r\nStatus code of 200 if update was successful.\r\n\r\n**Delete Feedback**\r\n\r\n```\r\nDELETE /feedback/:id\r\n```\r\n\r\n*Response*\r\n\r\nStatus code of 200 if delete was successful.\r\n\r\n### Match Hunt <a id=\"match\"></a>\r\n\r\nMatch hunt is a game that provides the User with a Clue, the user then tries to match this clue and is then rewarded with points.\r\n\r\n**Getting a Clue**\r\n\r\n```\r\nGET /match/:id\r\n```\r\n\r\nThis id attribute is provided to get either a particular Clue, or a Random Clue. If a *id == 0* a random Clue will be returned, else a Clue with the given *id* will be located.\r\n\r\n*Response*\r\n\r\n```\r\n{\r\n  \"id\": 1,\r\n  \"image\": \"https://randomsite.com/profile_images/3103894633/somerandomimage.jpeg\",\r\n  \"pointsValue\": 15,\r\n  \"createdAt\": \"2015-03-31T18:58:08.044Z\",\r\n  \"updatedAt\": \"2015-03-31T18:58:08.043Z\"\r\n}\r\n```\r\n\r\n**Attempting a Match**\r\n\r\nA match is attempted using a POST request, this will try to match a given clue to an artifact. \r\n\r\n```\r\nPOST /match\r\n```\r\n\r\n*Payload*\r\n\r\nRequired: UserId, ClueId, qrcode\r\n\r\n*Response*\r\n\r\nIf the clue is solved with the provided answer, a status code of 200 will be returned. When the clue is already solved for a given user, a status code of 403 is returned.\r\n\r\n### User <a id=\"user\"></a>\r\n\r\nUsers are considered anyone who is a museum visitor that want to take part of the Museum Match Hunt.\r\n\r\n**Get all Users**\r\n\r\n```\r\nGET /user\r\n```\r\n\r\n**Paramters**\r\n\r\nAvailable query parameters are: *page, per_page, first_name, and email.*\r\n\r\n*Response*\r\n\r\n```\r\n{\r\n    \"users\": [\r\n        {\r\n            \"id\": 1,\r\n            \"email\": \"cesarcruz91@gmail.com\",\r\n            \"firstName\": \"Cesar\",\r\n            \"lastName\": \"Cruz\",\r\n            \"gender\": \"male\",\r\n            \"age_range\": \"10-30\",\r\n            \"points\": \"0\",\r\n            \"active\": true,\r\n            \"facebook_id\": null,\r\n            \"facebook_link\": null,\r\n            \"accessToken\": null,\r\n            \"createdAt\": \"2015-04-01T04:18:00.185Z\",\r\n            \"updatedAt\": \"2015-04-17T04:37:15.059Z\"\r\n        },\r\n        {\r\n            \"id\": 2,\r\n            \"email\": \"jose.martinez60@upr.edu\",\r\n            \"firstName\": \"Jose\",\r\n            \"lastName\": \"Martinez\",\r\n            \"gender\": \"male\",\r\n            \"age_range\": \"10-30\",\r\n            \"points\": \"0\",\r\n            \"active\": true,\r\n            \"facebook_id\": null,\r\n            \"facebook_link\": null,\r\n            \"accessToken\": null,\r\n            \"createdAt\": \"2015-04-01T04:18:22.641Z\",\r\n            \"updatedAt\": \"2015-04-17T04:37:15.059Z\"\r\n        }\r\n    ]\r\n}\r\n```\r\n**Single User**\r\n\r\n```\r\nGET /user/:id\r\n```\r\n\r\n*Response*\r\n\r\n```\r\n{\r\n    \"id\": 1,\r\n    \"email\": \"cesar@musa.com\",\r\n    \"firstName\": \"Cesar\",\r\n    \"lastName\": \"Cruz\",\r\n    \"gender\": \"male\",\r\n    \"age_range\": \"10-30\",\r\n    \"points\": \"0\",\r\n    \"active\": true,\r\n    \"facebook_id\": null,\r\n    \"facebook_link\": null,\r\n    \"accessToken\": null,\r\n    \"createdAt\": \"2015-04-01T04:18:00.185Z\",\r\n    \"updatedAt\": \"2015-04-17T04:37:15.059Z\"\r\n}\r\n```\r\n\r\n**Create a User**\r\n\r\nUsers are created using an Facebook Access Token.\r\n\r\n*Payload*\r\n\r\nRequired: accessToken and userID (both acquired from facebook)\r\n\r\n*Response*\r\n\r\nAfter a user is successfully created, a status code of 200 is returned as well as a JWT token used to validate each request from the client as well as a userId. This token needs to be sent using the Authorization header in order to access the API\r\n\r\n**Edit User**\r\n\r\nUpdate information on a given user\r\n\r\n```\r\nPUT /user/:id\r\n```\r\n\r\n*Response*\r\n\r\nStatus code 200 if update was successful.\r\n\r\n**Delete User**\r\n\r\n```\r\nDELETE /user/:id\r\n```\r\n\r\n*Response*\r\n\r\nStatus code of 200 is delete was successful.\r\n\r\n**Get leaderboard**\r\n\r\nLeaderboard is a list of users sorted based on their points total.\r\n\r\n```\r\nGET /leaderboard\r\n```\r\n\r\n*Parameters*\r\n\r\nAvailable query parameters are; *page, per_page*\r\n\r\n*Response*\r\n\r\n```\r\n{\r\n    \"leaderboard\": [\r\n        {\r\n            \"firstName\": \"Cesar\",\r\n            \"lastName\": \"Cruz\",\r\n            \"points\": \"200\"\r\n        },\r\n        {\r\n            \"firstName\": \"Jose\",\r\n            \"lastName\": \"Martinez\",\r\n            \"points\": \"150\"\r\n        },\r\n        {\r\n            \"firstName\": \"Luis\",\r\n            \"lastName\": \"Medina\",\r\n            \"points\": \"100\"\r\n        }\r\n    ]\r\n}\r\n```\r\n\r\n**Reset Leaderboard**\r\n\r\nThe reset leaderboards route allows admins to set all user points to 0, a clean slate for everyone.\r\n\r\n```\r\nPUT /leaderboard\r\n```\r\n\r\n*Response*\r\n\r\nStatus code of 200 if reset was successful.\r\n\r\n### iBeacons <a id=\"beacon\"></a>\r\n\r\nThe Museum makes use of iBeacons to identify collections of Artifacts (Exhibitions) within the MuSA.\r\n\r\n**Security**\r\n\r\nTo add, edit or delete iBeacons, administrator priviledges are needed.\r\n\r\n**List iBeacons**\r\n\r\n```\r\nGET /beacon\r\n```\r\n\r\n*Parameters*\r\n\r\nAvailable query parameters are: *page, per_page, beacon_code*\r\n\r\n*Response*\r\n\r\n```\r\n{\r\n    \"beacons\": [\r\n        {\r\n            \"id\": 1,\r\n            \"code\": \"B558CBDA-4472-4211-A350-FF1196FFE8C8\",\r\n            \"RoomId\": 2,\r\n            \"createdAt\": \"2015-04-01T03:23:59.569Z\",\r\n            \"updatedAt\": \"2015-04-01T03:23:59.569Z\",\r\n            \"Room\": {\r\n                \"id\": 2,\r\n                \"name\": \"The Room\",\r\n                \"description\": \"The Room with all the stuff\",\r\n                \"createdAt\": \"2015-04-16T16:14:46.761Z\",\r\n                \"updatedAt\": \"2015-04-16T16:14:46.761Z\"\r\n            }\r\n        },\r\n        {\r\n            \"id\": 3,\r\n            \"code\": \"B9407F30-F5F8-466E-AFF9-25556B57FE6D12\",\r\n            \"RoomId\": 1,\r\n            \"createdAt\": \"2015-04-20T14:14:24.098Z\",\r\n            \"updatedAt\": \"2015-04-20T14:14:24.098Z\",\r\n            \"Room\": {\r\n                \"id\": 1,\r\n                \"name\": \"Agustin Stahl\",\r\n                \"description\": \"In commemoration to the famous cientist, Agustin Stahl\",\r\n                \"createdAt\": \"2015-03-31T18:58:08.049Z\",\r\n                \"updatedAt\": \"2015-03-31T18:58:08.049Z\"\r\n            }\r\n        }\r\n    ]\r\n}\r\n```\r\n\r\n**Single iBeacon**\r\n\r\n```\r\nGET /beacon/:id\r\n```\r\n\r\n*Response*\r\n```\r\n{\r\n    \"id\": 1,\r\n    \"code\": \"B558CBDA-4472-4211-A350-FF1196FFE8C8\",\r\n    \"RoomId\": 2,\r\n    \"createdAt\": \"2015-04-01T03:23:59.569Z\",\r\n    \"updatedAt\": \"2015-04-01T03:23:59.569Z\"\r\n}\r\n```\r\n\r\n**Create an iBeacon**\r\n\r\n```\r\nPOST /beacon\r\n```\r\n\r\n*Payload*\r\n\r\nrequired: code\r\noptional: RoomId\r\n\r\n*Response*\r\n\r\nStatus code of 201 if iBeacon was successfully created.\r\n\r\n**Edit iBeacon**\r\n\r\n```\r\nPUT /beacon/:id\r\n```\r\n\r\n*Response*\r\n\r\nStatus code of 200 if successfully updated.\r\n\r\n**Delete an iBeacon**\r\n\r\n```\r\nDELETE /beacon/:id\r\n```\r\n\r\n*Response*\r\n\r\nStatus code of 200 if iBeacons succeesfully deleted.\r\n\r\n### Administrator <a id=\"administrator\"></a>\r\n\r\nAdministrators are users in charge of managing the content of the MuSA API. Administrators are assigned by the Museum and can only be created by other administrators. \r\n\r\n**Security**\r\n\r\nAdministrator routes require de use of Administrator authentification, read Authentication section for more details.\r\n\r\n**List Administrators**\r\n\r\n```\r\nGET /administrator\r\n```\r\n\r\n*Parameters*\r\n\r\nAvailable parameters are: ***page, per_page, first_name, and email***\r\n\r\n*Response*\r\n```\r\n{\r\n    \"administrators\": [\r\n        {\r\n            \"id\": 1,\r\n            \"firstName\": \"Cesar\",\r\n            \"lastName\": \"Cruz\",\r\n            \"email\": \"sezal@musa.com\",\r\n            \"phone\": \"7874526702\"\r\n        },\r\n        {\r\n            \"id\": 2,\r\n            \"firstName\": \"Cesar\",\r\n            \"lastName\": \"Cruz\",\r\n            \"email\": \"cesar@admin.com\",\r\n            \"phone\": null\r\n        },\r\n        {\r\n            \"id\": 3,\r\n            \"firstName\": \"Luis\",\r\n            \"lastName\": \"Medina\",\r\n            \"email\": \"luis@musa.edu\",\r\n            \"phone\": null\r\n        },\r\n        {\r\n            \"id\": 7,\r\n            \"firstName\": \"Cesar\",\r\n            \"lastName\": \"Cruz\",\r\n            \"email\": \"cesar@musa.com\",\r\n            \"phone\": null\r\n        }\r\n    ]\r\n}\r\n```\r\n\r\n**Single Administrator**\r\n\r\n```\r\nGET /administrator/:id\r\n```\r\n\r\n*Response*\r\n\r\n```\r\n{\r\n    \"id\": 7,\r\n    \"firstName\": \"Cesar\",\r\n    \"lastName\": \"Cruz\",\r\n    \"email\": \"cesar@musa.com\",\r\n    \"phone\": null\r\n}\r\n```\r\n\r\n**Create an Administrator**\r\n\r\nCreate an instance of administrator, requires authentication\r\n\r\n```\r\nPOST /administrator\r\n```\r\n\r\n*Payload*\r\n\r\nRequired: email, password\r\nOptional (recomended): firstName, lastName, phone\r\n\r\n*Response*\r\n\r\nServer will respond with a status code of 201 if successful. \r\n\r\n**Edit an Administrator**\r\n\r\nEdit values for a given administrator, using id.\r\n\r\n```\r\nPUT /administrator/:id\r\n```\r\n\r\n*Payload*\r\n\r\nUpdates to the administrator will be based on values provided, payload may include: email, password, firstName, lastName or phone. Which ever attribute is provided in the payload, that and only that attribute will be updated.\r\n\r\n*Response*\r\n\r\nStatus code 200 if successful.\r\n\r\n**Delete an Administrator**\r\n\r\n```\r\nDELETE /administrator/:id\r\n```\r\n\r\n*Response*\r\n\r\nStatus code of 200 if successful.\r\n\r\n### Artist <a id=\"artist\"></a>\r\n\r\nArtifact artists\r\n\r\n**Security**\r\n\r\nArtists can only be created, edited or deleted by administrator users.\r\n\r\n**List Artists**\r\n\r\n```\r\nGET /artists\r\n```\r\n\r\n*Parameters*\r\n\r\nAvailable query parameters are: *page, per_page, and name*\r\n\r\n*Response*\r\n\r\n```\r\n{\r\n    \"artists\": [\r\n        {\r\n            \"id\": 1,\r\n            \"name\": \"César\",\r\n            \"biography\": \"Nacido en el pueblo de Tatooine, se especializa en oleos\",\r\n            \"birthDay\": \"1800\",\r\n            \"createdAt\": \"2015-03-31T18:58:08.025Z\",\r\n            \"updatedAt\": \"2015-03-31T18:58:08.025Z\"\r\n        }\r\n    ]\r\n}\r\n```\r\n\r\n**Single Artist**\r\n\r\n```\r\nGET /artists/:id\r\n```\r\n\r\n*Response*\r\n\r\n```\r\n{\r\n    \"id\": 1,\r\n    \"name\": \"César\",\r\n    \"biography\": \"Nacido en el pueblo de Tatooine, se especializa en oleos\",\r\n    \"birthDay\": \"1800\",\r\n    \"createdAt\": \"2015-03-31T18:58:08.025Z\",\r\n    \"updatedAt\": \"2015-03-31T18:58:08.025Z\"\r\n}\r\n```\r\n\r\n**Creating Artist**\r\n\r\n```\r\nPOST /artists\r\n```\r\n\r\n*Payload*\r\n\r\nRequired: name\r\nOptional: biography, and birthDay\r\n\r\n*Response*\r\n\r\nStatus code of 201 if Artist created successfully.\r\n\r\n**Edit Artist**\r\n\r\n```\r\nPUT /artist/:id\r\n```\r\n\r\n*Response*\r\n\r\nStatus code of 200 if update was successful.\r\n\r\n**Delete Artist**\r\n\r\n```\r\nDELETE /artist/:id\r\n```\r\n\r\n*Response*\r\n\r\nStatus code of 200 if delete was successful.\r\n\r\n### Room <a id=\"room\"></a>\r\n\r\nMuseum Rooms\r\n\r\n**Security**\r\n\r\nRooms can only be created, edited or deleted by administrator users.\r\n\r\n**List Rooms**\r\n\r\n```\r\nGET /room\r\n```\r\n\r\n*Parameters*\r\n\r\nAvailable query parameters are: *page, per_page, and name*\r\n\r\n*Response*\r\n\r\n```\r\n{\r\n    \"rooms\": [\r\n        {\r\n            \"id\": 1,\r\n            \"name\": \"Agustin Stahl\",\r\n            \"description\": \"In commemoration to the famous cientist, Agustin Stahl\",\r\n            \"createdAt\": \"2015-03-31T18:58:08.049Z\",\r\n            \"updatedAt\": \"2015-03-31T18:58:08.049Z\",\r\n            \"Beacons\": [\r\n                {\r\n                    \"id\": 3,\r\n                    \"code\": \"B9407F30-F5F8-466E-AFF9-25556B57FE6D12\",\r\n                    \"RoomId\": 1,\r\n                    \"createdAt\": \"2015-04-20T14:14:24.098Z\",\r\n                    \"updatedAt\": \"2015-04-20T14:14:24.098Z\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"id\": 2,\r\n            \"name\": \"The Room\",\r\n            \"description\": \"The Room with all the stuff\",\r\n            \"createdAt\": \"2015-04-16T16:14:46.761Z\",\r\n            \"updatedAt\": \"2015-04-16T16:14:46.761Z\",\r\n            \"Beacons\": [\r\n                {\r\n                    \"id\": 1,\r\n                    \"code\": \"B558CBDA-4472-4211-A350-FF1196FFE8C8\",\r\n                    \"RoomId\": 2,\r\n                    \"createdAt\": \"2015-04-01T03:23:59.569Z\",\r\n                    \"updatedAt\": \"2015-04-01T03:23:59.569Z\"\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}\r\n```\r\n\r\n**Single Room**\r\n\r\n```\r\nGET /room/:id\r\n```\r\n\r\n*Response*\r\n\r\n```\r\n{\r\n    \"id\": 2,\r\n    \"name\": \"The Room\",\r\n    \"description\": \"The Room with all the stuff\",\r\n    \"createdAt\": \"2015-04-16T16:14:46.761Z\",\r\n    \"updatedAt\": \"2015-04-16T16:14:46.761Z\",\r\n    \"Beacons\": [\r\n        {\r\n            \"id\": 1,\r\n            \"code\": \"B558CBDA-4472-4211-A350-FF1196FFE8C8\",\r\n            \"RoomId\": 2,\r\n            \"createdAt\": \"2015-04-01T03:23:59.569Z\",\r\n            \"updatedAt\": \"2015-04-01T03:23:59.569Z\"\r\n        }\r\n    ]\r\n}\r\n```\r\n\r\n**Creating Room**\r\n\r\n```\r\nPOST /room\r\n```\r\n\r\n*Payload*\r\n\r\nRequired: name, description\r\nOptional: n/a\r\n\r\n*Response*\r\n\r\nStatus code of 201 if Room created successfully.\r\n\r\n**Edit Room**\r\n\r\n```\r\nPUT /room/:id\r\n```\r\n\r\n*Response*\r\n\r\nStatus code of 200 if update was successful.\r\n\r\n**Delete Room**\r\n\r\n```\r\nDELETE /room/:id\r\n```\r\n\r\n*Response*\r\n\r\nStatus code of 200 if delete was successful.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}